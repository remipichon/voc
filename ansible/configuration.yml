---
- hosts: app
  become: yes
  tasks:
    - name: Check if 'mode' var is defined
      fail:
        msg: "You need to define '-e mode={host, remote, both}'"
      when: mode is undefined

    - name: Make sure we have a 'wheel' group
      group:
        name: wheel
        state: present

    - name: Allow 'wheel' group to have passwordless sudo
      lineinfile:
        dest: /etc/sudoers
        state: present
        regexp: "^%wheel"
        line: "%wheel ALL=(ALL) NOPASSWD: ALL"
        validate: visudo -cf %s

    - name: Add user to wheel group
      user:
        name: "{{ username }}"
        groups: wheel
        shell: "/bin/bash"
        append: yes

    - name: Create FS
      file:
        path: "{{ item }}"
        state: directory
        owner: "{{ username }}"
        group: "{{ username }}"
        mode: 0755
      with_items:
        - "{{ directories }}"

    - name: Get kernel name
      shell: "uname -s"
      register: kernel

    - name: Get architecture name
      shell: "uname -m"
      register: architecture

    - name: Install Docker Compose
      get_url:
        url: "https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ kernel.stdout }}-{{ architecture.stdout }}"
        dest: "/usr/local/bin/docker-compose"
        mode: 0744

    - name: Clone the project from Github
      git:
        repo: "{{ repo_url }}"
        dest: "/home/{{ username }}/voc"
        version: "{{ repo_version }}"
      become_user: "{{ username }}"

    - include: install_docker.yml

    - name: Generate intermediate compose file in mode '{{ mode }}'
      shell: "docker-compose -f docker-compose.yml -f docker-compose.{{ mode }}.yml config > docker-compose.intermediate.yml"
      when: mode in ['server','remote']

    - name: Generate intermediate compose file in mode '{{ mode }}'
      shell: docker-compose -f docker-compose.yml -f docker-compose.remote.yml -f docker-compose.host.yml config > docker-compose.intermediate.yml
      when: mode in ['both]

    - name: Edit Gitlab.conf
      template:
        src: gitlab.rb.j2
        dest: "/home/{{ username }}/gitlab/config/gitlab.rb"
